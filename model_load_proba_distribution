import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import numpy as np
import matplotlib.pyplot as plt

# Load a pre-trained model
model = tf.keras.applications.ResNet50(weights='imagenet')

# Path to your test dataset
test_data_dir = "path/to/your/test/dataset"
batch_size = 32

# Create an ImageDataGenerator for the test data
test_datagen = ImageDataGenerator(rescale=1.0/255)
test_generator = test_datagen.flow_from_directory(
    test_data_dir,
    target_size=(224, 224),
    batch_size=batch_size,
    class_mode='categorical',
    shuffle=False
)

# Get the predicted class probabilities for the test data
predictions = model.predict(test_generator, steps=len(test_generator), verbose=1)

# Plot the distribution of predicted class probabilities
plt.figure(figsize=(10, 6))
for class_idx, class_name in enumerate(test_generator.class_indices.keys()):
    class_probs = predictions[:, class_idx]
    plt.hist(class_probs, bins=20, alpha=0.5, label=class_name)

plt.xlabel("Probability")
plt.ylabel("Frequency")
plt.title("Distribution of Predicted Class Probabilities")
plt.legend()
plt.tight_layout()
plt.show()
